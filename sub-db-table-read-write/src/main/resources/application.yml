server:
  port: 9088

mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml #mapper.xml文件的地址

# 打印SQL
spring:
  shardingsphere:
    props:
      sql:
        show: true

# 数据源配置
    datasource:
      names: master0, slave0, master1, slave1

      master0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/master0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
      hikari:
        min-idle: 5 #最小空闲连接数量
        max-pool-size: 50 #连接池最大连接数，默认是10
        idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
        is_auto-commit: true #此属性控制从池返回的连接的默认自动提交行为,默认值：true
        max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
        connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000

      slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/slave0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root

      master1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/master1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root

      slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/slave1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root

# 分库分表策略配置
    sharding:
      default-database-strategy:
        inline:
          sharding-column: age
          algorithm-expression: master$->{age % 2}

      tables:
        tab_user:
          actual-data-nodes: master$->{0..1}.tab_user$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: tab_user$->{id % 2}

# 主从配置
      master-slave-rules:
        master0:
          master-data-source-name: master0
          slave-data-source-names: slave0

        master1:
          master-data-source-name: master1
          slave-data-source-names: slave1

